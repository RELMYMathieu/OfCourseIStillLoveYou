# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pool:
  vmImage: windows-latest

steps:
- task: PowerShell@2
  displayName: Downloading build dependencies
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      curl https://defaultstoragewesteur114.blob.core.windows.net/ksp/Dependencies.zip -o Dependencies.zip
- task: ExtractFiles@1
  displayName: Extracting dependencies
  inputs:
    archiveFilePatterns: '**\Dependencies.zip'
    destinationFolder: '$(Build.SourcesDirectory)\'
    cleanDestinationFolder: false
    overwriteExistingFiles: false

- task: NuGetToolInstaller@1
  inputs:
    versionSpec:
- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'

- task: VSBuild@1
  displayName: Compiling mod
  inputs:
    solution: '$(Build.SourcesDirectory)\OfCourseIStillLoveYou\OfCourseIStillLoveYou.csproj'
    msbuildArgs: '-p:PreBuildEvent=;PostBuildEvent= -p:Version=1.0.$(Build.BuildId)'
    platform: 'AnyCpu'
    configuration: 'Release'
    msbuildArchitecture: 'x64'

- task: DeleteFiles@1
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\OfCourseIStillLoveYou\Distribution\'
    Contents: '**/System.Memory.dll' 
    #RemoveSourceFolder: # Optional

- task: PowerShell@2
  displayName: Creating artifacts folder
  inputs:
    targetType: 'inline'
    script: |
     New-Item -ItemType "directory" -Path $(Build.ArtifactStagingDirectory)/win-x64
     New-Item -ItemType "directory" -Path $(Build.ArtifactStagingDirectory)/linux-x64
     New-Item -ItemType "directory" -Path $(Build.ArtifactStagingDirectory)/osx-x64


- task: CopyFiles@2
  displayName: Copy mod binaries to windows artifact directory
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\OfCourseIStillLoveYou\Distribution\'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\win-x64'

- task: CopyFiles@2
  displayName: Copy mod binaries to linux artifact directory
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\OfCourseIStillLoveYou\Distribution\'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\linux-x64'

- task: CopyFiles@2
  displayName: Copy mod binaries to osx artifact directory
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\OfCourseIStillLoveYou\Distribution\'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\osx-x64'

- task: CopyFiles@2
  displayName: Copy grpc native depedency for Windows
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\Dependencies\win'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\win-x64\GameData\OfCourseIStillLoveYou\Plugins'

- task: CopyFiles@2
  displayName: Copy grpc native depedency for Linux
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\Dependencies\linux'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\linux-x64\GameData\OfCourseIStillLoveYou\Plugins'
- task: CopyFiles@2
  displayName: Copy grpc native depedency for osx
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\Dependencies\osx'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\osx-x64\GameData\OfCourseIStillLoveYou\Plugins'

- task: DotNetCoreCLI@2
  displayName: Publishing Desktop win-x64
  inputs:
    command: 'publish'
    zipAfterPublish: false
    publishWebProjects: false
    projects: '**/OfCourseIStillLoveYou.DesktopClient.csproj'
    arguments: '-c Release -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true -p:Version=1.0.$(Build.BuildId) --configuration Release --runtime win-x64 --output $(Build.ArtifactStagingDirectory)\win-x64'

- task: DotNetCoreCLI@2
  displayName: Publishing Server win-x64
  inputs:
    command: 'publish'
    zipAfterPublish: false
    publishWebProjects: false
    projects: '**/OfCourseIStillLoveYou.Server.csproj'
    arguments: '-c Release -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true -p:Version=1.0.$(Build.BuildId) --configuration Release --runtime win-x64 --output $(Build.ArtifactStagingDirectory)\win-x64'

- task: DotNetCoreCLI@2
  displayName: Publishing Desktop linux-x64
  inputs:
    command: 'publish'
    zipAfterPublish: false
    publishWebProjects: false
    projects: '**/OfCourseIStillLoveYou.DesktopClient.csproj'
    arguments: '-c Release -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true -p:Version=1.0.$(Build.BuildId) --configuration Release --runtime linux-x64 --output $(Build.ArtifactStagingDirectory)\linux-x64'

- task: DotNetCoreCLI@2
  displayName: Publishing Server linux-x64
  inputs:
    command: 'publish'
    zipAfterPublish: false
    publishWebProjects: false
    projects: '**/OfCourseIStillLoveYou.Server.csproj'
    arguments: '-c Release -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true -p:Version=1.0.$(Build.BuildId) --configuration Release --runtime linux-x64 --output $(Build.ArtifactStagingDirectory)\linux-x64'

- task: DotNetCoreCLI@2
  displayName: Publishing Desktop osx-x64
  inputs:
    command: 'publish'
    zipAfterPublish: false
    publishWebProjects: false
    projects: '**/OfCourseIStillLoveYou.DesktopClient.csproj'
    arguments: '-c Release -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true -p:Version=1.0.$(Build.BuildId) --configuration Release --runtime osx-x64 --output $(Build.ArtifactStagingDirectory)\osx-x64'

- task: DotNetCoreCLI@2
  displayName: Publishing Server osx-x64
  inputs:
    command: 'publish'
    zipAfterPublish: false
    publishWebProjects: false
    projects: '**/OfCourseIStillLoveYou.Server.csproj'
    arguments: '-c Release -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true -p:Version=1.0.$(Build.BuildId) --configuration Release --runtime osx-x64 --output $(Build.ArtifactStagingDirectory)\osx-x64'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/win-x64'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '(Build.ArtifactStagingDirectory)/OfCourseIStillLoveYou_win_v1.0.$(Build.BuildId).zip'
    replaceExistingArchive: true
    
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/linux-x64'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '(Build.ArtifactStagingDirectory)/OfCourseIStillLoveYou_linux_v1.0.$(Build.BuildId).zip'
    replaceExistingArchive: true
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/osx-x64'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '(Build.ArtifactStagingDirectory)/OfCourseIStillLoveYou_osx_v1.0.$(Build.BuildId).zip'
    replaceExistingArchive: true
- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'JRV'
    repositoryName: 'jrodrigv/OfCourseIStillLoveYou'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: 'v1.0.$(Build.BuildId)'
    assets: |
      (Build.ArtifactStagingDirectory)/OfCourseIStillLoveYou_win_v1.0.$(Build.BuildId).zip
      (Build.ArtifactStagingDirectory)/OfCourseIStillLoveYou_linux_v1.0.$(Build.BuildId).zip
      (Build.ArtifactStagingDirectory)/OfCourseIStillLoveYou_osx_v1.0.$(Build.BuildId).zip
    title: 'OfCourseIStillLoveYou v1.0.$(Build.BuildId)'
    releaseNotesFilePath: '$(Build.SourcesDirectory)\ReleaseNotes.md'
    isDraft: true
    addChangeLog: false